{"version":3,"sources":["webpack:///src/views/performance-test/monitor-analysis.vue","webpack:///./src/api/performance.js","webpack:///./src/views/performance-test/monitor-analysis.vue?6269","webpack:///./src/views/performance-test/monitor-analysis.vue"],"names":["monitor_analysis","name","data","loading","analysisResult","charts","cpu","memory","load","core","methods","handleFileUpload","file","_this","this","asyncToGenerator_default","regenerator_default","a","mark","_callee","fileContent","monitoringData","response","wrap","_context","prev","next","size","$message","error","abrupt","readFileAsText","sent","JSON","parse","request","url","method","success","analysis","$nextTick","initCharts","t0","console","SyntaxError","message","finish","stop","promise_default","resolve","reject","reader","FileReader","onload","e","target","result","onerror","readAsText","resetAnalysis","destroyCharts","getScoreClass","score","getScoreText","getScoreDescription","getBottleneckIcon","severity","critical","high","medium","low","getTagType","getSeverityText","initCpuChart","initMemoryChart","initLoadChart","initCoreChart","$refs","cpuChart","echarts","charts_data","cpu_timeline","option","tooltip","trigger","formatter","xAxis","type","map","item","Date","time","toLocaleTimeString","yAxis","min","max","axisLabel","series","cpu_percent","smooth","itemStyle","color","areaStyle","opacity","setOption","memoryChart","memory_timeline","legend","memory_percent","swap_percent","loadChart","load_1min","coreChart","cpu_cores","value","usage","values_default","forEach","chart","dispose","beforeDestroy","performance_test_monitor_analysis","render","_vm","_h","$createElement","_c","_self","staticClass","_m","_v","_e","attrs","slot","drag","action","before-upload","show-file-list","accept","staticStyle","float","padding","on","click","gutter","span","_s","system_info","hostname","system","release","cpu_count_logical","total_memory_gb","margin-top","cpu_model","monitoring_summary","duration_seconds","cpu_data_points","sample_interval","class","performance_score","ref","bottlenecks","length","_l","bottleneck","index","key","description","impact","recommendations","recommendation","font-size","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/12.21c9f744a31be4073593.js","sourcesContent":["<template>\n  <div class=\"monitor-analysis\">\n    <div class=\"page-header\">\n      <h1>📊 性能监控数据分析</h1>\n      <p>上传系统监控数据，获取AI驱动的性能瓶颈分析和优化建议</p>\n    </div>\n\n    <!-- 文件上传区域 -->\n    <el-card class=\"upload-card\" v-if=\"!analysisResult\">\n      <div slot=\"header\">\n        <span>📁 上传监控数据</span>\n      </div>\n      \n      <el-upload\n        class=\"upload-dragger\"\n        drag\n        action=\"\"\n        :before-upload=\"handleFileUpload\"\n        :show-file-list=\"false\"\n        accept=\".json\"\n      >\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\">\n          将监控数据文件拖到此处，或<em>点击上传</em>\n        </div>\n        <div class=\"el-upload__tip\" slot=\"tip\">\n          只能上传JSON格式的监控数据文件，且不超过10MB\n        </div>\n      </el-upload>\n\n      <div class=\"upload-examples\">\n        <h4>💡 支持的监控数据格式：</h4>\n        <ul>\n          <li>Linux系统监控数据 (system_monitor_*.json)</li>\n          <li>包含CPU、内存、负载等性能指标</li>\n          <li>时间序列数据，支持5分钟到数小时的监控周期</li>\n        </ul>\n      </div>\n    </el-card>\n\n    <!-- 加载状态 -->\n    <el-card v-if=\"loading\" class=\"loading-card\">\n      <div class=\"loading-content\">\n        <el-spinner size=\"large\"></el-spinner>\n        <h3>🤖 AI正在分析监控数据...</h3>\n        <p>正在识别性能瓶颈和优化机会，请稍候</p>\n      </div>\n    </el-card>\n\n    <!-- 分析结果 -->\n    <div v-if=\"analysisResult && !loading\" class=\"analysis-results\">\n      <!-- 系统信息 -->\n      <el-card class=\"system-info-card\">\n        <div slot=\"header\">\n          <span>🖥️ 系统信息</span>\n          <el-button \n            style=\"float: right; padding: 3px 0\" \n            type=\"text\" \n            @click=\"resetAnalysis\"\n          >\n            重新分析\n          </el-button>\n        </div>\n        \n        <el-row :gutter=\"20\">\n          <el-col :span=\"6\">\n            <div class=\"info-item\">\n              <label>主机名:</label>\n              <span>{{ analysisResult.system_info.hostname }}</span>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"info-item\">\n              <label>系统:</label>\n              <span>{{ analysisResult.system_info.system }} {{ analysisResult.system_info.release }}</span>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"info-item\">\n              <label>CPU核心:</label>\n              <span>{{ analysisResult.system_info.cpu_count_logical }}个逻辑核心</span>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"info-item\">\n              <label>总内存:</label>\n              <span>{{ analysisResult.system_info.total_memory_gb }}GB</span>\n            </div>\n          </el-col>\n        </el-row>\n        \n        <el-row :gutter=\"20\" style=\"margin-top: 15px;\">\n          <el-col :span=\"6\">\n            <div class=\"info-item\">\n              <label>CPU型号:</label>\n              <span>{{ analysisResult.system_info.cpu_model || 'Unknown' }}</span>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"info-item\">\n              <label>监控时长:</label>\n              <span>{{ analysisResult.monitoring_summary.duration_seconds }}秒</span>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"info-item\">\n              <label>数据点数:</label>\n              <span>{{ analysisResult.monitoring_summary.cpu_data_points }}个</span>\n            </div>\n          </el-col>\n          <el-col :span=\"6\">\n            <div class=\"info-item\">\n              <label>采样间隔:</label>\n              <span>{{ analysisResult.monitoring_summary.sample_interval }}秒</span>\n            </div>\n          </el-col>\n        </el-row>\n      </el-card>\n\n      <!-- 性能评分 -->\n      <el-card class=\"score-card\">\n        <div slot=\"header\">\n          <span>🎯 性能评分</span>\n        </div>\n        \n        <div class=\"score-display\">\n          <div class=\"score-circle\" :class=\"getScoreClass(analysisResult.performance_score)\">\n            {{ analysisResult.performance_score }}\n          </div>\n          <div class=\"score-text\">\n            <h3>{{ getScoreText(analysisResult.performance_score) }}</h3>\n            <p>{{ getScoreDescription(analysisResult.performance_score) }}</p>\n          </div>\n        </div>\n      </el-card>\n\n      <!-- 性能图表 -->\n      <el-card class=\"charts-card\">\n        <div slot=\"header\">\n          <span>📈 性能趋势图表</span>\n        </div>\n        \n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <div class=\"chart-container\">\n              <h4>CPU使用率趋势</h4>\n              <div ref=\"cpuChart\" class=\"chart\"></div>\n            </div>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"chart-container\">\n              <h4>内存使用率趋势</h4>\n              <div ref=\"memoryChart\" class=\"chart\"></div>\n            </div>\n          </el-col>\n        </el-row>\n        \n        <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n          <el-col :span=\"12\">\n            <div class=\"chart-container\">\n              <h4>系统负载趋势</h4>\n              <div ref=\"loadChart\" class=\"chart\"></div>\n            </div>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"chart-container\">\n              <h4>CPU核心使用率</h4>\n              <div ref=\"coreChart\" class=\"chart\"></div>\n            </div>\n          </el-col>\n        </el-row>\n      </el-card>\n\n      <!-- 性能瓶颈 -->\n      <el-card class=\"bottlenecks-card\" v-if=\"analysisResult.bottlenecks.length > 0\">\n        <div slot=\"header\">\n          <span>⚠️ 性能瓶颈分析</span>\n        </div>\n        \n        <div class=\"bottlenecks-list\">\n          <div \n            v-for=\"(bottleneck, index) in analysisResult.bottlenecks\" \n            :key=\"index\"\n            class=\"bottleneck-item\"\n            :class=\"`bottleneck-${bottleneck.severity}`\"\n          >\n            <div class=\"bottleneck-header\">\n              <span class=\"bottleneck-icon\">{{ getBottleneckIcon(bottleneck.severity) }}</span>\n              <span class=\"bottleneck-title\">{{ bottleneck.description }}</span>\n              <el-tag :type=\"getTagType(bottleneck.severity)\" size=\"small\">\n                {{ getSeverityText(bottleneck.severity) }}\n              </el-tag>\n            </div>\n            <div class=\"bottleneck-impact\">\n              <strong>影响:</strong> {{ bottleneck.impact }}\n            </div>\n          </div>\n        </div>\n      </el-card>\n\n      <!-- 优化建议 -->\n      <el-card class=\"recommendations-card\" v-if=\"analysisResult.recommendations.length > 0\">\n        <div slot=\"header\">\n          <span>💡 优化建议</span>\n        </div>\n        \n        <div class=\"recommendations-list\">\n          <div \n            v-for=\"(recommendation, index) in analysisResult.recommendations\" \n            :key=\"index\"\n            class=\"recommendation-item\"\n          >\n            <div class=\"recommendation-number\">{{ index + 1 }}</div>\n            <div class=\"recommendation-content\">{{ recommendation }}</div>\n          </div>\n        </div>\n      </el-card>\n\n      <!-- 无瓶颈提示 -->\n      <el-card v-if=\"analysisResult.bottlenecks.length === 0\" class=\"no-issues-card\">\n        <div class=\"no-issues-content\">\n          <i class=\"el-icon-success\" style=\"font-size: 48px; color: #67C23A;\"></i>\n          <h3>🎉 未发现明显的性能瓶颈</h3>\n          <p>系统运行状况良好，性能表现优秀</p>\n        </div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport { analyzeMonitoringData } from '@/api/performance'\n\nexport default {\n  name: 'MonitorAnalysis',\n  data() {\n    return {\n      loading: false,\n      analysisResult: null,\n      charts: {\n        cpu: null,\n        memory: null,\n        load: null,\n        core: null\n      }\n    }\n  },\n  methods: {\n    async handleFileUpload(file) {\n      if (file.size > 10 * 1024 * 1024) {\n        this.$message.error('文件大小不能超过10MB')\n        return false\n      }\n\n      this.loading = true\n      \n      try {\n        const fileContent = await this.readFileAsText(file)\n        const monitoringData = JSON.parse(fileContent)\n        \n        // 调用分析API\n        const response = await analyzeMonitoringData(monitoringData)\n        \n        if (response.success) {\n          this.analysisResult = response.analysis\n          this.$nextTick(() => {\n            this.initCharts()\n          })\n          this.$message.success('监控数据分析完成')\n        } else {\n          this.$message.error(response.error || '分析失败')\n        }\n      } catch (error) {\n        console.error('分析错误:', error)\n        if (error instanceof SyntaxError) {\n          this.$message.error('JSON文件格式错误')\n        } else {\n          this.$message.error('分析过程中发生错误: ' + error.message)\n        }\n      } finally {\n        this.loading = false\n      }\n      \n      return false // 阻止默认上传行为\n    },\n\n    readFileAsText(file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.onload = e => resolve(e.target.result)\n        reader.onerror = reject\n        reader.readAsText(file)\n      })\n    },\n\n    resetAnalysis() {\n      this.analysisResult = null\n      this.destroyCharts()\n    },\n\n    getScoreClass(score) {\n      if (score >= 85) return 'score-excellent'\n      if (score >= 70) return 'score-good'\n      return 'score-poor'\n    },\n\n    getScoreText(score) {\n      if (score >= 85) return '优秀'\n      if (score >= 70) return '良好'\n      return '需要优化'\n    },\n\n    getScoreDescription(score) {\n      if (score >= 85) return '系统性能表现优秀，运行稳定'\n      if (score >= 70) return '系统性能良好，有少量优化空间'\n      return '系统存在性能问题，建议立即优化'\n    },\n\n    getBottleneckIcon(severity) {\n      const icons = {\n        critical: '🔴',\n        high: '🟠',\n        medium: '🟡',\n        low: '🔵'\n      }\n      return icons[severity] || '🔵'\n    },\n\n    getTagType(severity) {\n      const types = {\n        critical: 'danger',\n        high: 'warning',\n        medium: 'info',\n        low: 'success'\n      }\n      return types[severity] || 'info'\n    },\n\n    getSeverityText(severity) {\n      const texts = {\n        critical: '严重',\n        high: '高',\n        medium: '中',\n        low: '低'\n      }\n      return texts[severity] || '未知'\n    },\n\n    initCharts() {\n      this.initCpuChart()\n      this.initMemoryChart()\n      this.initLoadChart()\n      this.initCoreChart()\n    },\n\n    initCpuChart() {\n      if (!this.$refs.cpuChart) return\n      \n      this.charts.cpu = echarts.init(this.$refs.cpuChart)\n      const data = this.analysisResult.charts_data.cpu_timeline\n      \n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}<br/>CPU使用率: {c}%'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(item => new Date(item.time).toLocaleTimeString())\n        },\n        yAxis: {\n          type: 'value',\n          min: 0,\n          max: 100,\n          axisLabel: {\n            formatter: '{value}%'\n          }\n        },\n        series: [{\n          data: data.map(item => item.cpu_percent),\n          type: 'line',\n          smooth: true,\n          itemStyle: {\n            color: '#409EFF'\n          },\n          areaStyle: {\n            opacity: 0.3\n          }\n        }]\n      }\n      \n      this.charts.cpu.setOption(option)\n    },\n\n    initMemoryChart() {\n      if (!this.$refs.memoryChart) return\n      \n      this.charts.memory = echarts.init(this.$refs.memoryChart)\n      const data = this.analysisResult.charts_data.memory_timeline\n      \n      const option = {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['内存使用率', '交换分区使用率']\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(item => new Date(item.time).toLocaleTimeString())\n        },\n        yAxis: {\n          type: 'value',\n          min: 0,\n          max: 100,\n          axisLabel: {\n            formatter: '{value}%'\n          }\n        },\n        series: [\n          {\n            name: '内存使用率',\n            data: data.map(item => item.memory_percent),\n            type: 'line',\n            smooth: true,\n            itemStyle: {\n              color: '#67C23A'\n            }\n          },\n          {\n            name: '交换分区使用率',\n            data: data.map(item => item.swap_percent),\n            type: 'line',\n            smooth: true,\n            itemStyle: {\n              color: '#F56C6C'\n            }\n          }\n        ]\n      }\n      \n      this.charts.memory.setOption(option)\n    },\n\n    initLoadChart() {\n      if (!this.$refs.loadChart) return\n      \n      this.charts.load = echarts.init(this.$refs.loadChart)\n      const data = this.analysisResult.charts_data.cpu_timeline\n      \n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}<br/>负载: {c}'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(item => new Date(item.time).toLocaleTimeString())\n        },\n        yAxis: {\n          type: 'value',\n          min: 0\n        },\n        series: [{\n          data: data.map(item => item.load_1min),\n          type: 'line',\n          smooth: true,\n          itemStyle: {\n            color: '#E6A23C'\n          },\n          areaStyle: {\n            opacity: 0.3\n          }\n        }]\n      }\n      \n      this.charts.load.setOption(option)\n    },\n\n    initCoreChart() {\n      if (!this.$refs.coreChart) return\n      \n      this.charts.core = echarts.init(this.$refs.coreChart)\n      const data = this.analysisResult.charts_data.cpu_cores\n      \n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}<br/>使用率: {c}%'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(item => item.core)\n        },\n        yAxis: {\n          type: 'value',\n          min: 0,\n          max: 100,\n          axisLabel: {\n            formatter: '{value}%'\n          }\n        },\n        series: [{\n          data: data.map(item => ({\n            value: item.usage,\n            itemStyle: {\n              color: item.usage > 80 ? '#F56C6C' : \n                     item.usage > 60 ? '#E6A23C' : '#67C23A'\n            }\n          })),\n          type: 'bar'\n        }]\n      }\n      \n      this.charts.core.setOption(option)\n    },\n\n    destroyCharts() {\n      Object.values(this.charts).forEach(chart => {\n        if (chart) {\n          chart.dispose()\n        }\n      })\n      this.charts = {\n        cpu: null,\n        memory: null,\n        load: null,\n        core: null\n      }\n    }\n  },\n\n  beforeDestroy() {\n    this.destroyCharts()\n  }\n}\n</script>\n\n<style scoped>\n.monitor-analysis {\n  padding: 20px;\n}\n\n.page-header {\n  margin-bottom: 30px;\n  text-align: center;\n}\n\n.page-header h1 {\n  font-size: 2.5em;\n  color: #2c3e50;\n  margin-bottom: 10px;\n}\n\n.page-header p {\n  font-size: 1.1em;\n  color: #666;\n}\n\n.upload-card {\n  margin-bottom: 30px;\n}\n\n.upload-dragger {\n  width: 100%;\n}\n\n.upload-examples {\n  margin-top: 20px;\n  padding: 15px;\n  background: #f8f9fa;\n  border-radius: 5px;\n}\n\n.upload-examples h4 {\n  color: #2c3e50;\n  margin-bottom: 10px;\n}\n\n.upload-examples ul {\n  margin: 0;\n  padding-left: 20px;\n}\n\n.upload-examples li {\n  margin-bottom: 5px;\n  color: #666;\n}\n\n.loading-card {\n  margin-bottom: 30px;\n}\n\n.loading-content {\n  text-align: center;\n  padding: 40px;\n}\n\n.loading-content h3 {\n  margin: 20px 0 10px;\n  color: #2c3e50;\n}\n\n.loading-content p {\n  color: #666;\n}\n\n.analysis-results {\n  margin-top: 30px;\n}\n\n.system-info-card {\n  margin-bottom: 30px;\n}\n\n.info-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.info-item label {\n  font-weight: bold;\n  color: #2c3e50;\n  margin-right: 10px;\n  min-width: 80px;\n}\n\n.info-item span {\n  color: #666;\n}\n\n.score-card {\n  margin-bottom: 30px;\n}\n\n.score-display {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n}\n\n.score-circle {\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2.5em;\n  font-weight: bold;\n  color: white;\n  margin-right: 30px;\n}\n\n.score-excellent {\n  background: linear-gradient(135deg, #67C23A, #85CE61);\n}\n\n.score-good {\n  background: linear-gradient(135deg, #E6A23C, #F7BA2A);\n}\n\n.score-poor {\n  background: linear-gradient(135deg, #F56C6C, #F78989);\n}\n\n.score-text h3 {\n  margin: 0 0 10px;\n  color: #2c3e50;\n}\n\n.score-text p {\n  margin: 0;\n  color: #666;\n}\n\n.charts-card {\n  margin-bottom: 30px;\n}\n\n.chart-container {\n  text-align: center;\n}\n\n.chart-container h4 {\n  margin-bottom: 15px;\n  color: #2c3e50;\n}\n\n.chart {\n  height: 300px;\n  width: 100%;\n}\n\n.bottlenecks-card {\n  margin-bottom: 30px;\n}\n\n.bottlenecks-list {\n  margin-top: 15px;\n}\n\n.bottleneck-item {\n  border-left: 4px solid;\n  padding: 15px;\n  margin-bottom: 15px;\n  background: #f8f9fa;\n  border-radius: 0 5px 5px 0;\n}\n\n.bottleneck-critical {\n  border-left-color: #F56C6C;\n}\n\n.bottleneck-high {\n  border-left-color: #E6A23C;\n}\n\n.bottleneck-medium {\n  border-left-color: #409EFF;\n}\n\n.bottleneck-low {\n  border-left-color: #67C23A;\n}\n\n.bottleneck-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.bottleneck-icon {\n  font-size: 1.2em;\n  margin-right: 10px;\n}\n\n.bottleneck-title {\n  flex: 1;\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n.bottleneck-impact {\n  color: #666;\n  font-size: 0.9em;\n}\n\n.recommendations-card {\n  margin-bottom: 30px;\n}\n\n.recommendations-list {\n  margin-top: 15px;\n}\n\n.recommendation-item {\n  display: flex;\n  align-items: flex-start;\n  padding: 15px;\n  margin-bottom: 10px;\n  background: #e8f5e8;\n  border-radius: 5px;\n  border-left: 4px solid #67C23A;\n}\n\n.recommendation-number {\n  background: #67C23A;\n  color: white;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 0.9em;\n  margin-right: 15px;\n  flex-shrink: 0;\n}\n\n.recommendation-content {\n  color: #2c3e50;\n  line-height: 1.6;\n}\n\n.no-issues-card {\n  margin-bottom: 30px;\n}\n\n.no-issues-content {\n  text-align: center;\n  padding: 40px;\n}\n\n.no-issues-content h3 {\n  margin: 20px 0 10px;\n  color: #67C23A;\n}\n\n.no-issues-content p {\n  color: #666;\n}\n\n@media (max-width: 768px) {\n  .score-display {\n    flex-direction: column;\n    text-align: center;\n  }\n\n  .score-circle {\n    margin-right: 0;\n    margin-bottom: 20px;\n  }\n\n  .chart {\n    height: 250px;\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/performance-test/monitor-analysis.vue","import request from '@/utils/request'\n\n// 分析监控数据\nexport function analyzeMonitoringData(data) {\n  return request({\n    url: '/api/analyze-monitoring-data',\n    method: 'post',\n    data\n  })\n}\n\n// 上传监控数据文件\nexport function uploadMonitoringData(formData) {\n  return request({\n    url: '/api/upload-monitoring-data',\n    method: 'post',\n    data: formData,\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n}\n\n// 启动压力测试\nexport function startStressTest(config) {\n  return request({\n    url: '/api/stress-test/start',\n    method: 'post',\n    data: config\n  })\n}\n\n// 停止压力测试\nexport function stopStressTest(testId) {\n  return request({\n    url: `/api/stress-test/stop/${testId}`,\n    method: 'post'\n  })\n}\n\n// 获取压力测试状态\nexport function getStressTestStatus(testId) {\n  return request({\n    url: `/api/stress-test/status/${testId}`,\n    method: 'get'\n  })\n}\n\n// 获取实时监控数据\nexport function getRealtimeMetrics() {\n  return request({\n    url: '/api/monitoring/realtime',\n    method: 'get'\n  })\n}\n\n// 获取性能报告列表\nexport function getPerformanceReports(params) {\n  return request({\n    url: '/api/performance-reports',\n    method: 'get',\n    params\n  })\n}\n\n// 获取性能报告详情\nexport function getPerformanceReportDetail(reportId) {\n  return request({\n    url: `/api/performance-reports/${reportId}`,\n    method: 'get'\n  })\n}\n\n// 删除性能报告\nexport function deletePerformanceReport(reportId) {\n  return request({\n    url: `/api/performance-reports/${reportId}`,\n    method: 'delete'\n  })\n}\n\n// 导出性能报告\nexport function exportPerformanceReport(reportIds) {\n  return request({\n    url: '/api/performance-reports/export',\n    method: 'post',\n    data: { reportIds },\n    responseType: 'blob'\n  })\n}\n\n// 对比性能报告\nexport function comparePerformanceReports(reportIds) {\n  return request({\n    url: '/api/performance-reports/compare',\n    method: 'post',\n    data: { reportIds }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/performance.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"monitor-analysis\"},[_vm._m(0),_vm._v(\" \"),(!_vm.analysisResult)?_c('el-card',{staticClass:\"upload-card\"},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"📁 上传监控数据\")])]),_vm._v(\" \"),_c('el-upload',{staticClass:\"upload-dragger\",attrs:{\"drag\":\"\",\"action\":\"\",\"before-upload\":_vm.handleFileUpload,\"show-file-list\":false,\"accept\":\".json\"}},[_c('i',{staticClass:\"el-icon-upload\"}),_vm._v(\" \"),_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"\\n        将监控数据文件拖到此处，或\"),_c('em',[_vm._v(\"点击上传\")])]),_vm._v(\" \"),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"\\n        只能上传JSON格式的监控数据文件，且不超过10MB\\n      \")])]),_vm._v(\" \"),_c('div',{staticClass:\"upload-examples\"},[_c('h4',[_vm._v(\"💡 支持的监控数据格式：\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"Linux系统监控数据 (system_monitor_*.json)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"包含CPU、内存、负载等性能指标\")]),_vm._v(\" \"),_c('li',[_vm._v(\"时间序列数据，支持5分钟到数小时的监控周期\")])])])],1):_vm._e(),_vm._v(\" \"),(_vm.loading)?_c('el-card',{staticClass:\"loading-card\"},[_c('div',{staticClass:\"loading-content\"},[_c('el-spinner',{attrs:{\"size\":\"large\"}}),_vm._v(\" \"),_c('h3',[_vm._v(\"🤖 AI正在分析监控数据...\")]),_vm._v(\" \"),_c('p',[_vm._v(\"正在识别性能瓶颈和优化机会，请稍候\")])],1)]):_vm._e(),_vm._v(\" \"),(_vm.analysisResult && !_vm.loading)?_c('div',{staticClass:\"analysis-results\"},[_c('el-card',{staticClass:\"system-info-card\"},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"🖥️ 系统信息\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"padding\":\"3px 0\"},attrs:{\"type\":\"text\"},on:{\"click\":_vm.resetAnalysis}},[_vm._v(\"\\n          重新分析\\n        \")])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"info-item\"},[_c('label',[_vm._v(\"主机名:\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.analysisResult.system_info.hostname))])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"info-item\"},[_c('label',[_vm._v(\"系统:\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.analysisResult.system_info.system)+\" \"+_vm._s(_vm.analysisResult.system_info.release))])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"info-item\"},[_c('label',[_vm._v(\"CPU核心:\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.analysisResult.system_info.cpu_count_logical)+\"个逻辑核心\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"info-item\"},[_c('label',[_vm._v(\"总内存:\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.analysisResult.system_info.total_memory_gb)+\"GB\")])])])],1),_vm._v(\" \"),_c('el-row',{staticStyle:{\"margin-top\":\"15px\"},attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"info-item\"},[_c('label',[_vm._v(\"CPU型号:\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.analysisResult.system_info.cpu_model || 'Unknown'))])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"info-item\"},[_c('label',[_vm._v(\"监控时长:\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.analysisResult.monitoring_summary.duration_seconds)+\"秒\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"info-item\"},[_c('label',[_vm._v(\"数据点数:\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.analysisResult.monitoring_summary.cpu_data_points)+\"个\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"info-item\"},[_c('label',[_vm._v(\"采样间隔:\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.analysisResult.monitoring_summary.sample_interval)+\"秒\")])])])],1)],1),_vm._v(\" \"),_c('el-card',{staticClass:\"score-card\"},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"🎯 性能评分\")])]),_vm._v(\" \"),_c('div',{staticClass:\"score-display\"},[_c('div',{staticClass:\"score-circle\",class:_vm.getScoreClass(_vm.analysisResult.performance_score)},[_vm._v(\"\\n          \"+_vm._s(_vm.analysisResult.performance_score)+\"\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"score-text\"},[_c('h3',[_vm._v(_vm._s(_vm.getScoreText(_vm.analysisResult.performance_score)))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.getScoreDescription(_vm.analysisResult.performance_score)))])])])]),_vm._v(\" \"),_c('el-card',{staticClass:\"charts-card\"},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"📈 性能趋势图表\")])]),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('div',{staticClass:\"chart-container\"},[_c('h4',[_vm._v(\"CPU使用率趋势\")]),_vm._v(\" \"),_c('div',{ref:\"cpuChart\",staticClass:\"chart\"})])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('div',{staticClass:\"chart-container\"},[_c('h4',[_vm._v(\"内存使用率趋势\")]),_vm._v(\" \"),_c('div',{ref:\"memoryChart\",staticClass:\"chart\"})])])],1),_vm._v(\" \"),_c('el-row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('div',{staticClass:\"chart-container\"},[_c('h4',[_vm._v(\"系统负载趋势\")]),_vm._v(\" \"),_c('div',{ref:\"loadChart\",staticClass:\"chart\"})])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('div',{staticClass:\"chart-container\"},[_c('h4',[_vm._v(\"CPU核心使用率\")]),_vm._v(\" \"),_c('div',{ref:\"coreChart\",staticClass:\"chart\"})])])],1)],1),_vm._v(\" \"),(_vm.analysisResult.bottlenecks.length > 0)?_c('el-card',{staticClass:\"bottlenecks-card\"},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"⚠️ 性能瓶颈分析\")])]),_vm._v(\" \"),_c('div',{staticClass:\"bottlenecks-list\"},_vm._l((_vm.analysisResult.bottlenecks),function(bottleneck,index){return _c('div',{key:index,staticClass:\"bottleneck-item\",class:(\"bottleneck-\" + (bottleneck.severity))},[_c('div',{staticClass:\"bottleneck-header\"},[_c('span',{staticClass:\"bottleneck-icon\"},[_vm._v(_vm._s(_vm.getBottleneckIcon(bottleneck.severity)))]),_vm._v(\" \"),_c('span',{staticClass:\"bottleneck-title\"},[_vm._v(_vm._s(bottleneck.description))]),_vm._v(\" \"),_c('el-tag',{attrs:{\"type\":_vm.getTagType(bottleneck.severity),\"size\":\"small\"}},[_vm._v(\"\\n              \"+_vm._s(_vm.getSeverityText(bottleneck.severity))+\"\\n            \")])],1),_vm._v(\" \"),_c('div',{staticClass:\"bottleneck-impact\"},[_c('strong',[_vm._v(\"影响:\")]),_vm._v(\" \"+_vm._s(bottleneck.impact)+\"\\n          \")])])}),0)]):_vm._e(),_vm._v(\" \"),(_vm.analysisResult.recommendations.length > 0)?_c('el-card',{staticClass:\"recommendations-card\"},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"💡 优化建议\")])]),_vm._v(\" \"),_c('div',{staticClass:\"recommendations-list\"},_vm._l((_vm.analysisResult.recommendations),function(recommendation,index){return _c('div',{key:index,staticClass:\"recommendation-item\"},[_c('div',{staticClass:\"recommendation-number\"},[_vm._v(_vm._s(index + 1))]),_vm._v(\" \"),_c('div',{staticClass:\"recommendation-content\"},[_vm._v(_vm._s(recommendation))])])}),0)]):_vm._e(),_vm._v(\" \"),(_vm.analysisResult.bottlenecks.length === 0)?_c('el-card',{staticClass:\"no-issues-card\"},[_c('div',{staticClass:\"no-issues-content\"},[_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"font-size\":\"48px\",\"color\":\"#67C23A\"}}),_vm._v(\" \"),_c('h3',[_vm._v(\"🎉 未发现明显的性能瓶颈\")]),_vm._v(\" \"),_c('p',[_vm._v(\"系统运行状况良好，性能表现优秀\")])])]):_vm._e()],1):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-header\"},[_c('h1',[_vm._v(\"📊 性能监控数据分析\")]),_vm._v(\" \"),_c('p',[_vm._v(\"上传系统监控数据，获取AI驱动的性能瓶颈分析和优化建议\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-52bcddf8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/performance-test/monitor-analysis.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-52bcddf8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./monitor-analysis.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./monitor-analysis.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./monitor-analysis.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-52bcddf8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./monitor-analysis.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-52bcddf8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/performance-test/monitor-analysis.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}